###System setup

###            Set locale
function set_locale { 

	locale  # check for UTF-8
	sudo apt update && sudo apt install locales
	sudo locale-gen en_US en_US.UTF-8
	sudo update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8
	export LANG=en_US.UTF-8
	locale  # verify settings

}


###        Enable required repositories
# You will need to add the ROS 2 apt repository to your system.
# First ensure that the Ubuntu Universe repository is enabled.
function ros_apt_repo { 
	sudo apt install software-properties-common
	sudo add-apt-repository universe
}


# Now add the ROS 2 GPG key with apt.
function ros_apt_repo { 
	
	sudo apt update && sudo apt install curl -y
	
	sudo curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg
	
	echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) main" | sudo tee /etc/apt/sources.list.d/ros2.list > /dev/null


}


# Then add the repository to your sources list.

# Install development tools 
function ros_dev_tools {

	sudo apt update && sudo apt install ros-dev-tools
	sudo apt update
	sudo apt upgrade
}



function install_ros2 {
	sudo apt install ros-iron-desktop
}

function ros2_test {

	# Set up your environment by sourcing the following file.

	source /opt/ros/iron/setup.bash
}

function ros2_examples {

	# In one terminal, source the setup file and then run a C++ talker:

	source /opt/ros/iron/setup.bash
	ros2 run demo_nodes_cpp talker

        # In another terminal source the setup file and then run a Python listener:

	source /opt/ros/iron/setup.bash
	ros2 run demo_nodes_py listener
}
